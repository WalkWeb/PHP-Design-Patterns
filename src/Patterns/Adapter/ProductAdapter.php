<?php

namespace Patterns\Adapter;

/**
 * Адаптер, Декоратор и Фассад - это три паттерна, которые, если не вдаваться в назначение каждого из них, легко
 * перепутать.
 *
 * Официальная трактовка Адаптера:
 * «Привести нестандартный или неудобный интерфейс какого-то класса в интерфейс, совместимый с вашим кодом.»
 *
 * На мой взгляд более корректно и понятно определение звучит так:
 * «Адаптер используется для замены интерфейса у объекта»
 *
 * Удобный, нестандартный, это слишком абстрактные понятия. На практике, задача, которая решается адаптером проста -
 * есть класс А, который ожидает получить объект от интерфейса B, но нам нужно, чтобы он «скушал» объект от интерфейса
 * С. В этом случае мы используем адаптер и подменяем интерфейс В на С.
 *
 * @package Patterns\Adapter
 */
class ProductAdapter implements ProductInterface
{
    private $product;

    public function __construct(CarInterface $car)
    {
        $this->product = $car;
    }

    public function getName(): string
    {
        return $this->product->getName();
    }
}
